{"version":3,"sources":["components/FormikInput/FormikInputStyles.jsx","components/FormikInput/FormikInput.jsx","components/Login/LoginStyles.jsx","components/Login/Login.jsx","pages/LoginPage.jsx"],"names":["useStyles","createUseStyles","Form__input__wrap","display","justifyContent","alignItems","width","marginBottom","padding","textAlign","fontStyle","fontWeight","lineHeight","fontFamily","fontSize","Form__label","marginRight","Form__input","height","outline","border","borderRadius","paddingLeft","transition","FormikInput","label","hasRef","props","useField","field","meta","classes","inputRef","useRef","useEffect","current","focus","className","id","name","ref","touched","error","defaultProps","type","Form__box","flexDirection","margin","backgroundColor","Form__submit","textTransform","color","cursor","overflow","transform","opacity","Login","useState","loginData","setLoginData","dispatch","useDispatch","email","logIn","initialValues","password","validationSchema","Yup","required","min","onSubmit","values","onSubmitting","resetForm","formik","placeholder","disabled","isValid","isSubmitting","value","LoginPage","Container","style"],"mappings":"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","file":"static/js/6.53f51a7e.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nexport const useStyles = createUseStyles({\n  Form__input__wrap: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    marginBottom: 10,\n    padding: [0, 10],\n    textAlign: 'center',\n\n    fontStyle: 'italic',\n    fontWeight: 400,\n    lineHeight: 1.2,\n    fontFamily: 'inherit',\n\n    fontSize: '0.9rem',\n  },\n  Form__label: {\n    width: 70,\n    marginRight: 10,\n    textAlign: 'start',\n  },\n\n  Form__input: {\n    width: '100%',\n    height: '1.4rem',\n    outline: 'none',\n    border: [2, 'solid', '#e0e8e5' /*'#597387'*/],\n    borderRadius: 4,\n    paddingLeft: 8,\n\n    transition: 'all 250ms linear',\n    '&:hover, &:focus': {\n      border: [2, 'solid', '#a8beb6' /*'#597387'*/],\n    },\n  },\n});\n","import { useEffect, useRef } from 'react';\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useStyles } from './FormikInputStyles';\n\n/*\n  useField() returns\n  [formik.getFieldProps(), formik.getFieldMeta()]\n  which we can spread on <input>.\n  We can use field meta to show error\n  message if the field is invalid and\n  it has been touched (i.e. visited)\n*/\n\nconst FormikInput = ({ label, hasRef, ...props }) => {\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <div className={classes.Form__input__wrap}>\n      <label className={classes.Form__label}>{label}</label>\n      <input\n        id={props.id || props.name}\n        className={classes.Form__input}\n        ref={hasRef && inputRef}\n        {...field}\n        {...props}\n      />\n      {meta.touched && meta.error ? (\n        <div>\n          {/* className={classes.ErrorStyle}> */}\n          {meta.error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nFormikInput.defaultProps = {\n  label: 'Label -->',\n  type: 'text',\n  hasRef: null,\n};\n\nFormikInput.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  hasRef: PropTypes.string,\n};\n\nexport default FormikInput;\n","import { createUseStyles } from 'react-jss';\n\nexport const useStyles = createUseStyles({\n  Form__box: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 450,\n    margin: [5, 'auto'],\n    padding: 10,\n    border: [2, 'solid', '#e0e8e5'],\n    borderRadius: 8,\n    backgroundColor: '#f6fafb',\n  },\n\n  Form__submit: {\n    width: '75%',\n    height: '2.2rem',\n    padding: '0.25rem',\n    border: [3, 'solid', '#e0e8e5'],\n    borderRadius: 8,\n    outline: 'none',\n\n    textTransform: 'uppercase',\n    fontWeight: 700,\n    color: '#FFFFFF',\n    backgroundColor: '#597387',\n    cursor: 'pointer',\n    overflow: 'hidden',\n\n    transition: 'transform 250ms linear',\n\n    '&:hover, &:focus': {\n      transform: 'scale(1.02)',\n    },\n\n    '&:disabled': {\n      opacity: 0.3,\n    },\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../../redux/auth/auth-operations';\nimport FormikInput from '../FormikInput/FormikInput';\nimport { useEffect } from 'react';\nimport { useStyles } from './LoginStyles';\n\nconst Login = () => {\n  const [loginData, setLoginData] = useState({});\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleSubmit = (values, { onSubmitting, resetForm }) => {\n    setLoginData(values);\n\n    resetForm();\n\n    setLoginData({});\n  };\n\n  useEffect(() => {\n    loginData.email && dispatch(logIn(loginData));\n  }, [loginData, dispatch]);\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={Yup.object({\n        email: Yup.string()\n          .email('Please enter valid email')\n          .required('This field is required'),\n        password: Yup.string()\n          .min(7, 'Minimum 7 characters')\n          .required('Required field'),\n      })}\n      onSubmit={handleSubmit}\n    >\n      {formik => (\n        <Form className={classes.Form__box}>\n          <FormikInput\n            name=\"email\"\n            label=\"Email:\"\n            type=\"email\"\n            placeholder=\"test@test.com\"\n            hasRef=\"yes\"\n          />\n          <FormikInput\n            name=\"password\"\n            label=\"Password:\"\n            type=\"password\"\n            placeholder=\"*******\"\n          />\n          <input\n            disabled={!formik.isValid || formik.isSubmitting}\n            type=\"submit\"\n            value=\"submit\"\n            name=\"submit\"\n            className={classes.Form__submit}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n","import Container from '../components/Container/Container';\nimport Login from '../components/Login/Login';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <h3 style={{ margin: 10 }}>Login</h3>\n      <Login />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}