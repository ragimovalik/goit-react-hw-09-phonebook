{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Nav/Nav.module.css","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/Spinner/Spinner.module.css","components/Container/Container.jsx","components/Spinner/Spinner.jsx","redux/auth/auth-actions.js","redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store-toolkit.js","routes.js","pages/NotFoundPage.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","components/UserMenu/UserMenu.jsx","components/Nav/AuthNav.jsx","components/Nav/Nav.jsx","App.js","index.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","setFilter","module","exports","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","axios","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","dispatch","a","actions","post","response","data","toast","success","status","error","message","logIn","logOut","getCurrentUser","getState","persistedToken","console","log","get","useStyles","createUseStyles","Container","display","justifyContent","alignItems","flexDirection","margin","padding","children","classes","className","Spinner","size","styles","Spinner__wrapper","Animated","defaultProps","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentRequest","getCurrentSuccess","getCurrentError","items","createReducer","_","action","payload","filter","id","loading","combineReducers","userInitialState","email","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","routes","path","title","exact","component","lazy","privateRoute","restricted","NotFoundPage","style","PrivateRoute","Component","routeProps","useSelector","render","props","to","PublicRoute","Flex","User__greetings","marginRight","User__name","marginLeft","textDecoration","fontStyle","textTransform","UserMenu","userName","useDispatch","join","type","onClick","fontSize","AuthNav","Nav__auth","Nav__item","activeClassName","Nav","Header__box","Nav__links","App","useEffect","fallback","map","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d478564.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\nexport const getContactsError = createAction('contacts/getContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const setFilter = createAction('contacts/setFilter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"lightened\":\"#f6fafb\",\"white\":\"#ffffff\",\"Header__box\":\"Nav_Header__box__2mbHT\",\"Nav\":\"Nav_Nav__2hbXh\",\"Nav__links\":\"Nav_Nav__links__2sHHm\",\"Nav__auth\":\"Nav_Nav__auth__3zRpg\",\"Nav__item\":\"Nav_Nav__item__umT5A\",\"Nav__item--active\":\"Nav_Nav__item--active__3Axa6\"};","export const getIsLoggedIn = state => !!state.auth?.isLoggedIn;\n\nexport const getUserName = state => state.auth?.user?.name;\n","import axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport * as actions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credentials => async dispatch => {\n  dispatch(actions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(actions.registerSuccess(response.data));\n\n    toast.success('Your are joined to the Phonebook');\n  } catch (error) {\n    error.response.status === 400\n      ? toast.error('User email is already in use')\n      : toast.error(error.message);\n\n    dispatch(actions.registerError(error.message));\n  }\n};\n\nexport const logIn = credentials => async dispatch => {\n  dispatch(actions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(actions.loginSuccess(response.data));\n\n    toast.success('Welcome! You are logged in');\n  } catch (error) {\n    error.response.status === 400\n      ? toast.error('Incorrect Email address or Password')\n      : toast.error(error.message);\n\n    dispatch(actions.loginError(error.message));\n  }\n};\n\nexport const logOut = () => async dispatch => {\n  dispatch(actions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(actions.logoutSuccess());\n\n    toast.success('See you later :)');\n  } catch (error) {\n    toast.error(error.message);\n\n    dispatch(actions.logoutError(error.message));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  console.log('token', token);\n  console.log('persisted token', persistedToken);\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(actions.getCurrentRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(actions.getCurrentSuccess(response.data));\n  } catch (error) {\n    toast.error(error?.message);\n\n    dispatch(actions.getCurrentError(error.message));\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"text\":\"#252b31\",\"darkened\":\"#597387\",\"Animated\":\"Spinner_Animated__lmiUy\",\"Spin\":\"Spinner_Spin__3YU82\",\"Spinner__wrapper\":\"Spinner_Spinner__wrapper__XFs4Z\"};","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    margin: [5, 'auto'],\n    padding: [0, 10],\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.Container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport { CgSpinnerTwo } from 'react-icons/cg';\nimport styles from './Spinner.module.css';\n\nconst Spinner = ({ size }) => (\n  <div className={styles.Spinner__wrapper}>\n    <CgSpinnerTwo className={styles.Animated} size={size} />\n  </div>\n);\n\nSpinner.defaultProps = {\n  size: '3rem',\n};\n\nSpinner.propTypes = {\n  size: PropTypes.string,\n};\n\nexport default Spinner;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentRequest = createAction('auth/getCurrentRequest');\nexport const getCurrentSuccess = createAction('auth/getCurrentSuccess');\nexport const getCurrentError = createAction('auth/getCurrentError');\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\nimport { combineReducers } from 'redux';\n\nconst items = createReducer([], {\n  [actions.getContactsSuccess]: (_, action) => action.payload,\n\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n\n  [actions.deleteContactSuccess]: (state, action) => {\n    return state.filter(({ id }) => id !== action.payload);\n  },\n});\n\nconst filter = createReducer('', {\n  [actions.setFilter]: (state, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [actions.getContactsError]: (_, action) => action.payload,\n\n  [actions.addContactError]: (_, action) => action.payload,\n\n  [actions.deleteContactError]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [actions.getContactsRequest]: () => true,\n  [actions.getContactsSuccess]: () => false,\n  [actions.getContactsError]: () => false,\n\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as actions from './auth-actions';\n\nconst userInitialState = {\n  name: null,\n  email: null,\n};\n\nconst user = createReducer(userInitialState, {\n  [actions.registerSuccess]: (state, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.logoutSuccess]: () => userInitialState,\n  [actions.getCurrentSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [actions.registerSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [actions.registerError]: (_, { payload }) => payload,\n  [actions.loginError]: (_, { payload }) => payload,\n  [actions.logoutError]: (_, { payload }) => payload,\n  [actions.getCurrentError]: (_, { payload }) => payload,\n});\n\nconst isLoggedIn = createReducer(false, {\n  [actions.registerSuccess]: () => true,\n  [actions.loginSuccess]: () => true,\n  [actions.getCurrentSuccess]: () => true,\n  [actions.logoutSuccess]: () => false,\n\n  [actions.registerError]: () => false,\n  [actions.loginError]: () => false,\n  [actions.logoutError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isLoggedIn,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducers';\nimport authReducer from './auth/auth-reducers';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { lazy } from 'react';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst RegistrationPage = lazy(() => import('./pages/RegistrationPage'));\n\nexport const routes = [\n  {\n    path: '/',\n    title: 'Home',\n    exact: true,\n    component: HomePage,\n\n    privateRoute: false,\n    restricted: false,\n  },\n  {\n    path: '/contacts',\n    title: 'Contacts',\n    exact: true,\n    component: ContactsPage,\n\n    privateRoute: true,\n    restricted: false,\n  },\n  {\n    path: '/login',\n    title: 'Login',\n    exact: true,\n    component: LoginPage,\n\n    privateRoute: false,\n    restricted: true,\n  },\n  {\n    path: '/registration',\n    title: 'Registration',\n    exact: true,\n    component: RegistrationPage,\n\n    privateRoute: false,\n    restricted: true,\n  },\n];\n","import Container from '../components/Container/Container';\n\nconst NotFoundPage = () => {\n  return (\n    <Container>\n      <h2 style={{ margin: 10 }}>Page Not Found</h2>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, ...routeProps }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isLoggedIn && routeProps.restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport { AiOutlineExport } from 'react-icons/ai';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nconst useStyles = createUseStyles({\n  Flex: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  User__greetings: {\n    marginRight: 10,\n  },\n  User__name: {\n    marginLeft: 5,\n    textDecoration: 'underline',\n    fontStyle: 'italic',\n    textTransform: 'uppercase',\n  },\n});\n\nconst UserMenu = () => {\n  const userName = useSelector(getUserName);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleClick = () => dispatch(logOut());\n\n  return (\n    <div className={classes.Flex}>\n      <p className={[classes.Flex, classes.User__greetings].join(' ')}>\n        Welcome <span className={classes.User__name}>{userName}</span>\n      </p>\n      <button type=\"button\" onClick={handleClick}>\n        <AiOutlineExport style={{ fontSize: '1.2rem' }} />\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { NavLink } from 'react-router-dom';\nimport styles from './Nav.module.css';\n\nconst AuthNav = () => {\n  return (\n    <ul className={styles.Nav__auth}>\n      <li key=\"LoginPage\">\n        <NavLink\n          to=\"/login\"\n          exact\n          className={styles.Nav__item}\n          activeClassName={styles['Nav__item--active']}\n        >\n          Login\n        </NavLink>\n      </li>\n      <li key=\"RegistrationPage\">\n        <NavLink\n          to=\"/registration\"\n          exact\n          className={styles.Nav__item}\n          activeClassName={styles['Nav__item--active']}\n        >\n          Registration\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default AuthNav;\n","import { NavLink } from 'react-router-dom';\n// import { routes } from '../../routes';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport UserMenu from '../UserMenu/UserMenu';\nimport styles from './Nav.module.css';\n\nimport AuthNav from './AuthNav';\n\nconst Nav = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <header className={styles.Header__box}>\n      <nav className={styles.Nav}>\n        <ul className={styles.Nav__links}>\n          <li key=\"HomePage\">\n            <NavLink\n              to=\"/\"\n              exact\n              className={styles.Nav__item}\n              activeClassName={styles['Nav__item--active']}\n            >\n              Home\n            </NavLink>\n          </li>\n\n          {isLoggedIn && (\n            <li key=\"Contacts\">\n              <NavLink\n                to=\"/contacts\"\n                exact\n                className={styles.Nav__item}\n                activeClassName={styles['Nav__item--active']}\n              >\n                Contacts\n              </NavLink>\n            </li>\n          )}\n        </ul>\n\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n","import { useEffect, Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport { routes } from './routes';\nimport NotFoundPage from './pages/NotFoundPage';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport Nav from './components/Nav/Nav';\nimport Spinner from './components/Spinner';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, []); //eslint-disable-line\n\n  return (\n    <>\n      <Nav />\n      <Suspense fallback={<Spinner size=\"5rem\" />}>\n        <Switch>\n          {routes.map(\n            ({\n              exact,\n              path,\n              component: Component,\n              privateRoute,\n              title,\n              restricted,\n            }) =>\n              privateRoute ? (\n                <PrivateRoute\n                  key={title}\n                  path={path}\n                  component={Component}\n                  exact={exact}\n                  title={title}\n                  restricted={restricted}\n                />\n              ) : (\n                <PublicRoute\n                  key={title}\n                  path={path}\n                  component={Component}\n                  exact={exact}\n                  title={title}\n                  restricted={restricted}\n                />\n              ),\n          )}\n          <NotFoundPage />\n        </Switch>\n      </Suspense>\n      <Toaster />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store-toolkit';\nimport App from './App.js';\nimport './index.css';\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}