{"version":3,"sources":["components/InputBox/InputBox.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selectors.js","components/InputBox/InputBox.jsx","components/Form/Form.jsx","redux/contacts/contacts-operations.js","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","normalizedText","toLowerCase","contact","name","includes","filterContacts","InputBox","htmlFor","type","id","title","pattern","placeholder","required","value","labelText","onChange","className","styles","Form__wrap","Form__label","Form__input","defaultProps","Form","useState","number","localState","setLocalState","showAddForm","setShowAddForm","useSelector","dispatch","useDispatch","onInputChange","target","prevState","Wrapper__box","Form__title","Provider","color","size","Add__btn","onClick","onSubmit","event","preventDefault","newContact","find","contactsChecker","a","actions","axios","post","response","data","toast","success","error","message","Form__btn","Filter","Filter__wrap","Filter__title","setFilter","currentTarget","ContactListItem","ContactList__item","ContactList__name","ContactList__phone","contactId","delete","ContactList__icon","ContactList","filteredContacts","useEffect","get","console","dir","ContactList__title","Spinner","length","map","ContactsPage","Container"],"mappings":"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","file":"static/js/4.616daf54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"Form__wrap\":\"InputBox_Form__wrap__sS2p2\",\"Form__label\":\"InputBox_Form__label__2-Mj5\",\"Form__input\":\"InputBox_Form__input__QaTm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"darkened\":\"#597387\",\"text\":\"#252b31\",\"white\":\"#ffffff\",\"Form__wrap\":\"Form_Form__wrap__3vDyu\",\"Wrapper__box\":\"Form_Wrapper__box__EN_-3\",\"Form__title\":\"Form_Form__title__3Xi_y\",\"Form\":\"Form_Form__3jnfk\",\"Form__btn\":\"Form_Form__btn__2FwY-\",\"Add__btn\":\"Form_Add__btn__musHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"Filter__wrap\":\"Filter_Filter__wrap__2l9ez\",\"Filter__title\":\"Filter_Filter__title__1BM7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"text\":\"#252b31\",\"lightened\":\"#f6fafb\",\"red\":\"#ff0000\",\"ContactList__item\":\"ContactListItem_ContactList__item__1KM-c\",\"ContactList__name\":\"ContactListItem_ContactList__name__AW9JD\",\"ContactList__phone\":\"ContactListItem_ContactList__phone__o9kbX\",\"ContactList__icon\":\"ContactListItem_ContactList__icon__2iwc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../colors.css'\",\"bgcPrimary\":\"#e0e8e5\",\"text\":\"#252b31\",\"lightened\":\"#f6fafb\",\"red\":\"#ff0000\",\"ContactList\":\"ContactList_ContactList__15deE\",\"ContactList__title\":\"ContactList_ContactList__title__1sQqH\"};","import { createSelector } from '@reduxjs/toolkit';\n\n// === Store design ===\n// === {contacts: {items, filter, loading, error}} ===\n\nexport const getContactsStore = state => state.contacts;\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n\nconst filterContacts = (items, filter) => {\n  const normalizedText = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedText),\n  );\n};\n\nexport const getFilteredContacts = createSelector(\n  getContacts,\n  getFilter,\n  (contacts, filter) => {\n    return filterContacts(contacts, filter);\n  },\n);\n","import PropTypes from 'prop-types';\nimport styles from './InputBox.module.css';\n\nconst InputBox = ({\n  htmlFor,\n  type,\n  id,\n  name,\n  title,\n  pattern,\n  placeholder,\n  required,\n  value,\n  labelText,\n  onChange,\n}) => {\n  const patternText =\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  const patternPhone = '^[+]{0,1}[ .()0-9-]{3,8}[0-9. -]{3,11}$';\n  // '/(+?( |-|.)?d{1,2}( |-|.)?)?((?d{3})?|d{3})( |-|.)?(d{3}( |-|.)?d{4})/';\n\n  return (\n    <div className={styles.Form__wrap}>\n      <label htmlFor={htmlFor} className={styles.Form__label}>\n        <span>{labelText}</span>\n      </label>\n\n      <input\n        className={styles.Form__input}\n        type={type}\n        id={id}\n        name={name}\n        title={title}\n        pattern={pattern === 'text' ? `${patternText}` : `${patternPhone}`}\n        placeholder={placeholder}\n        required={required}\n        onChange={onChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nInputBox.defaultProps = {\n  title: 'Please enter some text',\n  required: true,\n  labelText: 'Label for -->',\n};\n\nInputBox.propTypes = {\n  htmlFor: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelText: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default InputBox;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { MdAdd, MdRemove } from 'react-icons/md';\nimport { IconContext } from 'react-icons/lib';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport InputBox from '../InputBox/InputBox';\nimport styles from './Form.module.css';\n\nconst Form = () => {\n  const [localState, setLocalState] = useState({ name: '', number: '' });\n  const [showAddForm, setShowAddForm] = useState(false);\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const setDefault = () =>\n    setLocalState({\n      name: '',\n      number: '',\n    });\n\n  const onInputChange = ({ target: { name, value } }) => {\n    return setLocalState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const contactsChecker = name => {\n    return items?.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = localState;\n\n    const newContact = { name, number };\n\n    contactsChecker(name)\n      ? toast(`${name} is already in contacts`)\n      : dispatch(addContact(newContact));\n\n    setDefault();\n  };\n\n  const onAddFormShow = () => setShowAddForm(prevState => !prevState);\n\n  return (\n    <div className={styles.Form__wrap}>\n      <div className={styles.Wrapper__box}>\n        <h3 className={styles.Form__title}>Add Contact</h3>\n        <IconContext.Provider\n          value={{\n            color: 'inherit',\n            size: '1.2rem',\n            className: 'global-class-name',\n          }}\n        >\n          <button className={styles.Add__btn} onClick={onAddFormShow}>\n            {showAddForm ? <MdRemove /> : <MdAdd />}\n          </button>\n        </IconContext.Provider>\n      </div>\n      {showAddForm && (\n        <form className={styles.Form} onSubmit={handleSubmit}>\n          <InputBox\n            labelText={'Name'}\n            htmlFor={'name'}\n            type={'text'}\n            id={'name'}\n            name={'name'}\n            title={\n              \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            }\n            pattern={'text'}\n            placeholder={'Name'}\n            required={true}\n            value={localState.name}\n            onChange={onInputChange}\n          />\n\n          <InputBox\n            labelText={'Phone number'}\n            htmlFor={'tel'}\n            type={'tel'}\n            id={'tel'}\n            name={'number'}\n            title={\n              'Номер телефона должен состоять из 11-12 цифр и может содержать цифры, точки, пузатые скобки и может начинаться с +'\n            }\n            pattern={'phone'}\n            placeholder={'Phone Number'}\n            required={true}\n            value={localState.number}\n            onChange={onInputChange}\n          />\n          <button className={styles.Form__btn} type=\"submit\">\n            Submit\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport * as actions from './contacts-actions';\n\nexport const getContacts = () => async dispatch => {\n  dispatch(actions.getContactsRequest());\n\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(actions.getContactsSuccess(response.data));\n  } catch (error) {\n    toast.error(error.message);\n\n    console.dir(error);\n\n    dispatch(actions.getContactsError(error.message));\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  dispatch(actions.addContactRequest());\n\n  try {\n    const response = await axios.post('/contacts', contact);\n    dispatch(actions.addContactSuccess(response.data));\n    toast.success('Contact successfully added');\n  } catch (error) {\n    toast.error(error.message);\n    dispatch(actions.addContactError(error.message));\n  }\n};\n\nexport const deleteContact = contactId => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.deleteContactSuccess(contactId));\n    toast.success('Contact deleted');\n  } catch (error) {\n    toast.error(error.message);\n\n    dispatch(actions.deleteContactError(error.message));\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\n// import { setFilter } from '../../redux/slice';\nimport { setFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport InputBox from '../InputBox/InputBox';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  // const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filterHandler = event => dispatch(setFilter(event.currentTarget.value));\n\n  return (\n    <div className={styles.Filter__wrap}>\n      <h3 className={styles.Filter__title}>Search</h3>\n\n      <InputBox\n        labelText={'Find Name'}\n        htmlFor={'filter'}\n        type={'text'}\n        id={'filter'}\n        name={'filter'}\n        pattern={'text'}\n        placeholder={'Name'}\n        required={false}\n        value={filter}\n        onChange={filterHandler}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\nimport { MdDelete } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={styles.ContactList__item}>\n      <p className={styles.ContactList__name}>{name}</p>\n      <p className={styles.ContactList__phone}>{number}</p>\n\n      <IconContext.Provider\n        value={{\n          color: 'inherit',\n          size: '1.2rem',\n          className: 'global-class-name',\n          title: 'delete',\n        }}\n      >\n        <div\n          onClick={() => {\n            return dispatch(deleteContact(id));\n          }}\n        >\n          <MdDelete className={styles.ContactList__icon} />\n        </div>\n      </IconContext.Provider>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  // .string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default ContactListItem;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getLoading,\n  getFilteredContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { getContacts } from '../../redux/contacts/contacts-operations';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport Spinner from '../Spinner';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(getLoading);\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.ContactList}>\n      <h3 className={styles.ContactList__title}>Contact List</h3>\n      {loading && <Spinner />}\n\n      <ul>\n        {filteredContacts.length >= 1 ? (\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))\n        ) : (\n          <p>Nothing to show. Please add your first contact </p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Form from '../components/Form/Form';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport Container from '../components/Container/Container';\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <Form />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}