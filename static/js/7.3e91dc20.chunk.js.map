{"version":3,"sources":["components/FormikInput/FormikInputStyles.jsx","components/FormikInput/FormikInput.jsx","components/Registration/RegistrationStyles.jsx","components/Registration/Registration.jsx","pages/RegistrationPage.jsx"],"names":["useStyles","createUseStyles","Form__input__wrap","display","justifyContent","alignItems","width","marginBottom","padding","textAlign","fontStyle","fontWeight","lineHeight","fontFamily","fontSize","Form__label","marginRight","Form__input","height","outline","border","borderRadius","paddingLeft","transition","FormikInput","label","props","useField","field","meta","classes","className","id","name","touched","error","defaultProps","type","Form__box","flexDirection","margin","backgroundColor","Form__submit","textTransform","color","cursor","overflow","transform","opacity","Registration","useState","registrationData","setRegistrationData","dispatch","useDispatch","useEffect","register","initialValues","email","password","validationSchema","Yup","min","max","required","onSubmit","values","resetForm","formik","placeholder","disabled","isValid","isSubmitting","value","RegistrationPage","Container","style"],"mappings":"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","file":"static/js/7.3e91dc20.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nexport const useStyles = createUseStyles({\n  Form__input__wrap: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    marginBottom: 10,\n    padding: [0, 10],\n    textAlign: 'center',\n\n    fontStyle: 'italic',\n    fontWeight: 400,\n    lineHeight: 1.2,\n    fontFamily: 'inherit',\n\n    fontSize: '0.9rem',\n  },\n  Form__label: {\n    width: 70,\n    marginRight: 10,\n    textAlign: 'start',\n  },\n\n  Form__input: {\n    width: '100%',\n    height: '1.4rem',\n    outline: 'none',\n    border: [2, 'solid', '#e0e8e5' /*'#597387'*/],\n    borderRadius: 4,\n    paddingLeft: 8,\n\n    transition: 'all 250ms linear',\n    '&:hover, &:focus': {\n      border: [2, 'solid', '#a8beb6' /*'#597387'*/],\n    },\n  },\n});\n","import { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useStyles } from './FormikInputStyles';\n\n/*\n  useField() returns\n  [formik.getFieldProps(), formik.getFieldMeta()]\n  which we can spread on <input>.\n  We can use field meta to show error\n  message if the field is invalid and\n  it has been touched (i.e. visited)\n*/\n\nconst FormikInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.Form__input__wrap}>\n      <label className={classes.Form__label}>{label}</label>\n      <input\n        id={props.id || props.name}\n        className={classes.Form__input}\n        {...field}\n        {...props}\n      />\n      {meta.touched && meta.error ? (\n        <div>\n          {/* className={classes.ErrorStyle}> */}\n          {meta.error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nFormikInput.defaultProps = {\n  label: 'Label -->',\n  type: 'text',\n};\n\nFormikInput.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FormikInput;\n","import { createUseStyles } from 'react-jss';\n\nexport const useStyles = createUseStyles({\n  Form__box: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 450,\n    margin: [5, 'auto'],\n    padding: 10,\n    border: [2, 'solid', '#e0e8e5'],\n    borderRadius: 8,\n    backgroundColor: '#f6fafb',\n  },\n\n  Form__submit: {\n    width: '75%',\n    height: '2.2rem',\n    padding: '0.25rem',\n    border: [3, 'solid', '#e0e8e5'],\n    borderRadius: 8,\n    outline: 'none',\n\n    textTransform: 'uppercase',\n    fontWeight: 700,\n    color: '#FFFFFF',\n    backgroundColor: '#597387',\n    cursor: 'pointer',\n    overflow: 'hidden',\n\n    transition: 'transform 250ms linear',\n\n    '&:hover, &:focus': {\n      transform: 'scale(1.02)',\n    },\n\n    '&:disabled': { opacity: 0.3 },\n  },\n});\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../../redux/auth/auth-operations';\nimport FormikInput from '../FormikInput/FormikInput';\nimport { useEffect } from 'react';\nimport { useStyles } from './RegistrationStyles';\n\nconst Registration = () => {\n  const [registrationData, setRegistrationData] = useState({});\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values, { resetForm }) => {\n    setRegistrationData(values);\n\n    resetForm();\n  };\n\n  useEffect(() => {\n    registrationData.name && dispatch(register(registrationData));\n  }, [registrationData, dispatch]);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .min(2, 'Name should be longer')\n            .max(15, 'Maximum 15 characters')\n            .required('This field is required'),\n          email: Yup.string()\n            .email('Please enter valid email')\n            .required('This field is required'),\n          password: Yup.string()\n            .min(7, 'Minimum 7 characters')\n            .required('This field is required'),\n        })}\n        onSubmit={onSubmit}\n      >\n        {formik => (\n          <Form className={classes.Form__box}>\n            <FormikInput\n              label=\"Name:\"\n              name=\"name\"\n              placeholder=\"John\"\n              // type=\"text\"\n              // title=\"name\"\n            />\n            <FormikInput\n              label=\"Email:\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"test@test.com\"\n            />\n            <FormikInput\n              label=\"Password:\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"*******\"\n            />\n\n            <input\n              disabled={!formik.isValid || formik.isSubmitting}\n              type=\"submit\"\n              value=\"submit\"\n              name=\"submit\"\n              className={classes.Form__submit}\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Registration;\n","import Container from '../components/Container/Container';\nimport Registration from '../components/Registration/Registration';\n\nconst RegistrationPage = () => {\n  return (\n    <Container>\n      <h3 style={{ margin: 10 }}>Registration</h3>\n      <Registration />\n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n"],"sourceRoot":""}